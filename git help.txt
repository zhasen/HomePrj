1.需要告诉Github，你要使用的用户名
git config --global user.name "Your Name Here"  

2.设置邮箱
git config --global user.email "your_email@example.com" 

3.在github上创建项目

4.clone项目到本地 下载别人的代码库用https。不可以ssh。没有权限啊
git clone https://github.com/zhasen/HomePrj.git








初始化一个Git仓库，使用git init命令。

使用命令git add ，注意，可反复多次使用，添加多个文件

或者是git add .

使用命令git commit，完成。

查看差别
git diff readme.txt 

要随时掌握工作区的状态，使用git status命令。

如果git status告诉你有文件被修改过，用git diff可以查看修改内容。

我们用git log命令查看历史
如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数

查看文件
cat readme.txt

指定版本号恢复到某一个版本
git reset --hard 3628164

要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；
关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改

要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆。
Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。


查看历史的版本号。能找到未来的和过去的
git reflog

命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
总之，就是让这个文件回到最近一次git commit或git add时的状态

创建dev分支 加上-b参数表示创建并切换
git checkout -b dev
相当于
git branch dev
git checkout dev
这两句

用git branch命令查看当前分支
git branch

切换为master分支
git checkout master

我们把dev分支的工作成果合并到master分支上
git merge dev

删除dev分支
git branch -d dev

查看分支：git branch
创建分支：git branch name
切换分支：git checkout name
创建+切换分支：git checkout -b name
合并某分支到当前分支：git merge name
删除分支：git branch -d name


用带参数的git log也可以看到分支的合并情况带 视图的
git log --graph --pretty=oneline --abbrev-commit

修改bug的流程
暂存dev分支上的工作现场。git stash
切换到主分支 git checkout master
创建对应bug的修改分支，bug编号101.分支名称issue-101.创建并切换到此分支 git checkout -b issue-101
修改bug。。。。。。。。。。。
加入暂存区 git add XXXX.XXX
提交 git commit -m 'fixed bug 101'
切换到master分支 git checkout master
合并master分支与issue-101分支的代码。并且禁止快速合并，使用有提交历史的合并方式git merge --no-ff -m'fix bug 101 over' issue-101
删除bug的对应分支git branch -d issue-101
切换至开发分支git checkout dev
查看开发的文件修改状态 git status 没有反应。不是刚才的开发现场。
查看暂存历史git stash list
恢复到开发现场两种方式
1，回复现场，不删除暂存区内容 git stash apply.用git stash drop来删除
2，回复现场并直接删除暂存区git stash pop

如果要丢弃一个没有被合并过的分支，可以通过git branch -D name强行删除。

查看远程库的信息
git remote

用git remote -v显示更详细的信息
git remote -v

origin  git@github.com:michaelliao/learngit.git (fetch)
origin  git@github.com:michaelliao/learngit.git (push)
上面显示了可以抓取和推送的origin的地址。如果没有推送权限，就看不到push的地址。




暂存工作现场
git stash





--提交本地代码库代码
git push origin master

提交到本地代码库，备注test
git commit -m 'test'

如果有删除文件的情况要加-a参数才能同步。
git commit -a -m 'test'

